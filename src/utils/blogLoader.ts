// Utility to load blog posts from markdown files (generated by Netlify CMS)
export interface BlogPost {
  id: string;
  title: string;
  content: string;
  excerpt: string;
  category: string;
  author: string;
  authorBio: string;
  authorImage: string;
  date: string;
  readTime: string;
  image: string;
  tags: string[];
  featured: boolean;
  views: number;
  likes: number;
  comments: number;
  slug: string;
}

// This function will be used to load blog posts from the CMS
export const loadBlogPosts = async (): Promise<BlogPost[]> => {
  try {
    // In production, this would load from the generated markdown files
    // For now, we'll use localStorage as fallback
    const savedPosts = localStorage.getItem('blogPosts');
    if (savedPosts) {
      return JSON.parse(savedPosts);
    }
    return [];
  } catch (error) {
    console.error('Error loading blog posts:', error);
    return [];
  }
};

// Function to convert markdown content to HTML
export const markdownToHtml = (markdown: string): string => {
  // Simple markdown to HTML conversion
  // In production, you'd use a proper markdown parser like 'marked' or 'remark'
  return markdown
    .replace(/^### (.*$)/gim, '<h3>$1</h3>')
    .replace(/^## (.*$)/gim, '<h2>$1</h2>')
    .replace(/^# (.*$)/gim, '<h1>$1</h1>')
    .replace(/^\> (.*$)/gim, '<blockquote>$1</blockquote>')
    .replace(/\*\*(.*)\*\*/gim, '<strong>$1</strong>')
    .replace(/\*(.*)\*/gim, '<em>$1</em>')
    .replace(/!\[([^\]]*)\]\(([^\)]*)\)/gim, '<img alt="$1" src="$2" />')
    .replace(/\[([^\]]*)\]\(([^\)]*)\)/gim, '<a href="$2">$1</a>')
    .replace(/\n$/gim, '<br />');
};